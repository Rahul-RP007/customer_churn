# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zw9U_av2Ehtul0oEPU5rZNTAKvO2aBPH
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/customer_churn.csv')
df
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()

for cols in df.columns:
  if df[cols].dtype=='object':
    df[cols]=le.fit_transform(df[cols])

df.info()

x=df.iloc[:,:-1]
y=df['Churn']
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score,confusion_matrix

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

model_d=DecisionTreeClassifier()
model.fit(x_train,y_train)

y_pred1=model.predict(x_test)
y_pred
acc=accuracy_score(y_test,y_pred)
acc*100

from sklearn.ensemble import RandomForestClassifier
model1=RandomForestClassifier()
model1.fit(x_train,y_train)

y_pred2=model.predict(x_test)
acc1=accuracy_score(y_test,y_pred)
acc1*100

lit=[3,5,7,9,11,13,15]
for x in lit:
  model=RandomForestClassifier(n_estimators=x,random_state=34)
  model.fit(x_train,y_train)
  y_pred=model.predict(x_test)
  acc=accuracy_score(y_test,y_pred)
  print(acc)
